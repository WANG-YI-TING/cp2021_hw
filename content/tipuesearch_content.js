var tipuesearch = {"pages": [{'title': 'About', 'text': '這是計算機程式課程 2021 Fall 的作業倉儲與網站 template \n \n 41023101 \n 網站倉儲: https://github.com/WANG-YI-TING/cp2021_hw \xa0 \n 網站連結: https://wang-yi-ting.github.io/cp2021_hw/ \xa0 \n 其他與個人或作業相關資料說明或介紹 \n', 'tags': '', 'url': 'About.html'}, {'title': 'run', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n', 'tags': '', 'url': 'run.html'}, {'title': 'runsrc', 'text': 'run頁面在動態網頁的 html: \n /downloads/run.txt', 'tags': '', 'url': 'runsrc.html'}, {'title': 'SSH', 'text': '下載putty這裡是詢問同學協助操作完成的 \n 1.先下載putty \n 2.下載完後進入putty利用puttygen.exe製作一個key \n 3.將key存到github settings裡的SSH and GPG keys \n 4.再到puttygen.exe點選save private key \n 5.開啟putty.exe在 hostname和saved sessions都填github.com，先儲存一次 \n 然後將SSH裡的Auth指向儲存的key再儲存一次 \n 6.將倉儲裡的config用編譯器打開，把remote origin改成 url =\xa0git@github.com:WANG-YI-TING/cp2021_hw.git \n 7.最後要確認start_ipv4.bat有set GIT_SSH=%Disk%:\\PuTTY\\plink.exe', 'tags': '', 'url': 'SSH.html'}, {'title': 'Exam', 'text': '', 'tags': '', 'url': 'Exam.html'}, {'title': 'w13', 'text': '\n 列出10座標 \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  內建程式 1 ####################################### 內建程式 1 開始 \n \n \n \n  內建程式 1 ####################################### 內建程式 1 結束 \n \n  button 程式 1 ####################################### button 程式 1 開始 \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  editor1 結束  \n', 'tags': '', 'url': 'w13.html'}, {'title': 'HW1', 'text': 'HW1 - 網際動畫與 touch typing 佔學期成績 20%. \n HW1 必須在 2021.10.20 22:00 之前完成 . \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.10.20 22:00 關閉 \n \n hw1-1程式碼: https://gist.githubusercontent.com/WANG-YI-TING/d356dab440a047f48d942b8839c9c7a2/raw/05d49367c467db868bfac286579017774aec4e6f/gistfile1.txt \xa0 \n hw1-2程式碼: https://gist.githubusercontent.com/WANG-YI-TING/ec1c4e1dbfef402a6a3f2cbeda02d484/raw/4a846da4a90ddab5bfa2d6b609ee7bc3a9d69827/gistfile1.txt \xa0 \n 英文打字(30min50sec): https://gist.githubusercontent.com/WANG-YI-TING/e25cb39b50544a545211e28c944d5eb6/raw/435b0ac9518590c6ac7c776a38502b09962ac477/%25E8%258B%25B1 \xa0 \n 中文打字(4min38sec): https://gist.githubusercontent.com/WANG-YI-TING/a2d034296d9240244d1259b445201c4d/raw/7126a706c8d1080dd177797b37a5c2d11cdba930/%25E4%25B8%25AD \xa0 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 - 可攜程式系統與個人網站佔學期成績 20%. \n HW2 必須在 2021.11.03 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.10.25 開啟, 於  2021.11.03 22:00 關閉 \n 可攜程式系統與 Python 範例程式收集整理 \n 1. 請準備一個至少 64 GB 大小的 USB 3.0 以上隨身碟 (或外接 SSD), 根據  Task2  中的說明, 建立自己的可攜程式系統.\xa0 \n 2. 請登入 Github 帳號後, 連線至  https://github.com/mdecourse/cp2021_hw  後, 透過  Use this template  按鈕建立自己的 cp2021_hw 倉儲. 並至該倉儲的 Settings -> Pages -> Source 將 main 分支設為 Github Pages 的 root (也就是選擇將倉儲的 main 分支設為對應網站的根目錄). \n 3. 請將 HW1 與 HW2 的作業內容登錄至個人的 cp2021_hw 倉儲與網站中. (學習如何透過 git 指令修改倉儲中的版本內容) \n 4. 請在個人作業網站的 HW2 區域下增設一個 H2 頁面, 將該網頁標題命名為 run, 可以如  run  頁面中的內容, 並且利用此頁面收集 Python 範例程式. (例如: 可自動執行的貪食蛇:  https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py  將  https://gist.github.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439  作為  https://mde.tw/cp2021/content/run.html  頁面中 src 變數的值, 就可以在頁面中導入程式碼並執行) \n', 'tags': '', 'url': 'HW2.html'}, {'title': '建立cp2021_hw作業倉儲說明', 'text': '1.須先建立且登入GitHub帳號 \n 2.進入老師的作業倉儲 https://github.com/mdecourse/cp2021_hw  \n 按 Use this template 在Repository name 輸入倉儲名稱cp2021_hw \n 點選 Create repository from\xa0template 複製頁面出現的網址 \n 3.開啟cmd(黑色頁面的編譯器) \n 輸入cd tmp \n 輸入git clone --recurse-submodules (作業倉儲網址+.git)/ \n 輸入cd cp2021_hw \n 輸入pip install pyopenssl \n 輸入cms \n 接著會出現一段網址https://127.0.0.1:9448/ \n 9448才是正確的 之前一直卡在9445就進不去近端網頁 \n 複製網址後到瀏覽器開啟進入近端網頁 \n Login密碼為admin 輸入後將網頁改成靜態網頁就可以編輯自己的作業網站 \n 編輯完成後要將網頁改成靜態 \n 4.記得要到倉儲網站的settings的Developer settings裡的Personal access tokens建立一個自己的token， \n 還有要將到期時效改為永久 ，這樣token就不會到期 ，且要從cmd推資料到近端時，就不會找不到要推的近端位置在哪 \n 5.要從cmd推資料到近端時按ctrl+c兩次 \n 輸入acp "(要推的物件名稱)" 這個很重要 acp是推資料到近端的一個重要指令 \n 6.從倉儲裡的settings點選pages，將Source改為main並儲存 \n 這樣就能把編輯的資料推到近端', 'tags': '', 'url': '建立cp2021_hw作業倉儲說明.html'}, {'title': 'problem', 'text': '因為token過一段會自動更新，時效到了就無法從靜態近端網頁推東西到動態網頁。 \n 所以要從個人頁面的settings的developer settings裡的personal access token \n 把舊的token刪除，設立一個新的token，並把token到期時間改為永久，這樣從靜態網頁推東西到動態網頁。', 'tags': '', 'url': 'problem.html'}, {'title': 'w10', 'text': 'W10 之後, 開始執行   HW3   與   Final Project . \n 從 cp2021 課程內容中可知計算機程式的課程目的: \n 鼓勵每一位同學都能及早 確定努力的目標 , 證明自己具備 獨立研究與解題能力 . \n 由於   HW1   的目的在提醒電腦程式的編寫牽涉鍵盤中英文打字, 因此學員必須自行練就 touch typing 的能力, 可正確無誤快速 keyin 所需的程式碼以及相關說明內容. \n HW1   的程式編寫內容是修改一個 Brython 動畫程式, 讓紅色方塊能在使用者視覺暫留時間內移動座標位置, 可在特定位置時改變移動方向. 完成程式修改後則要求將程式碼存入個人的 Gist 區域. \n HW2   則要求使用者建立在 Windows 10 64 位元操作系統中的 Python 可攜程式系統, 主要內容帶有 Python 3.9.5 與 Portablegit 2.31.1 版, 可以用來啟動近端採 Flask 編寫的   https://github.com/mdecourse/cp2021_hw   課程動態網頁, 並用瀏覽器編輯後將動態網頁轉為只帶有 html, css 與 javascript 的靜態網頁後, 推送至 Github Pages 網站中伺服. \n HW2   除了建立可攜程式系統外, 也要求將   HW1   中的 Gist 程式碼, 以   run.txt   ( runsrc ) 的動態內容執行. \n 至於從   HW2   進展到   HW3   網際 Brython 貪食蛇的編寫與修改, 需要: \n \n 配合各種程式語法, 從 教科書導讀 中, 整理 Brython 與 CPython 的程式語法說明 \n 在個人課程網頁中, 整理   4 小時 Python 互動課程 的內容. \n 將線上課程中的 Python   程式範例 , 分門別類改寫為 Brython 程式, 並依照   Practice2   格式以按鈕導入執行. \n 了解   Pathfinding Snake 程式 執行原理 (資料結構與演算法,   搜尋圖解 1,   搜尋圖解 2), 將程式改為 Brython 格式後, 直接在   Practice2   的按鈕中執行. \n \n HW3   Snake Game 的程式設計未來可以發展為 AI 程式競賽 ( Snakes AI Competition 2020 and 2021 Report.pdf ). ( 參考1 ,   參考2 ,   參考3 ,   參考4 ) \n 各學員完成上述各項內容後, 可以自選題目完成   Final Project . \n References: \n https://github.com/mdecourse/snake-game \n https://kevinkparsons.com/snake-game.html  ( snake_game in Excel ) \n snake_curses_and_tk.zip', 'tags': '', 'url': 'w10.html'}, {'title': 'w11 note', 'text': '建立新倉儲 \n 登入Github的帳號 \n 在Repository name設置新倉儲名字w11 \n 再按creat repository 接下來須把cmd(複製靜態網頁網址的黑色頁面)打開 \n 輸入md w11 按enter \n 輸入cd w11 按enter \n 輸入 git config --global init.defaultBranch main(利用 git init 建立的倉儲都以 main 為主要分支，可將設定寫入 .gitconfig) \n echo "# w11" >> README.md \n git init \n git add README.md \n git commit -m "first commit" \n git branch -M main \n git remote add origin\xa0 https://github.com/WANG-YI-TING/w11.git \n git push -u origin main \n \n git push -u origin main要先設SSH或是像建立cp2021_hw倉儲時一樣設置一個token \n 這樣要從靜態網頁推資料到新的倉儲才不會找不到要推的近端位置在哪 \n', 'tags': '', 'url': 'w11 note.html'}, {'title': 'w12', 'text': 'w12demo.txt \n ROC 國旗規格 . \n PROC 國旗規格  - 可以根據此規格定義, 新增  PROC flag  按鈕. \n USA 國旗規格  - 可以根據此規格定義, 新增  USA flag  按鈕. \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n add 1 to 100 p261 ROC flag \n  ######################  editor1 開始 ######################  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n  這裡的畫布 id 為 brython_div  \n \n  ######################  editor1 結束 ######################  \n  以下可以開始利用 editor1 的設定編寫對應 Brython 程式  \n \n  以上為內建程式, 頁面可透過 ?src=gist_url 執行  \n  add 1 to 100 開始  \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'Examples', 'text': '這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕. (本動態頁面檔案  Examples.txt ) \n 1. 從 1 累加到 100 (以下列 button 呈現). \n 2. 教科書 ( Programming with Python ) 2.6 Exercises, 共有三個題目, 請分別將程式製作為按鈕 (button). \n 3. 請利用  Canvas  繪製 Fig. 3.7 的流程圖 (Flow Chart). \n 4. 請利用 Canvas 繪製你所編寫"從 1 累加到 10"程式的流程圖 (Flow Chart). \n 5. 請各班各組合力完成 3.5 Exercises 中的 14 個題目. \n 6. 請各組從 4.3 Exercises 中選擇一個題目製作為頁面中的按鈕 (button). \n 無  Canvas  繪圖需求的程式, 可放在第一區, 而採  Canvas  繪圖的程式則可放入第二區. \n 將 Gist 中的程式導入本頁面的程式段:  brython_button_prog.txt , 只要配合 button id 對應即可導入編輯區. \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  內建程式 1 ####################################### 內建程式 1 開始 \n \n \n \n  內建程式 1 ####################################### 內建程式 1 結束 \n \n  button 程式 1 ####################################### button 程式 1 開始 \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  editor1 結束   button 程式 1 ####################################### button 程式 1 結束 \n \n  button 程式 2 ####################################### button 程式 2 開始 \n 第二編輯區程式 ( 編輯  Snake 原始碼): \n 查驗輸入字串 Snake \n  判斷輸入字串是否aA1$, 且至少 8 個字元-開始  \n \n \n  判斷輸入字串是否aA1$, 且至少 8 個字元-結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  editor2 結束  \n \n  button 程式 2 ####################################### button 程式 2  結束 \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n References: \n https://zerojudge.tw/ \n https://shaform.com/csdream/docs/problem-solving/ \n https://onlinejudge.org/ \n', 'tags': '', 'url': 'Examples.html'}, {'title': 'HW3', 'text': '\n HW3 - AI 貪食蛇佔學期成績 30%. \n HW3 必須在 2021.12.22 22:00 之前完成. \n HW3 具體項目成果回報區 將於 2021.11.09 開啟, 於  2021.12.22 22:00 關閉 \n 網際貪食蛇的逆襲, 誰的 自動執行貪食蛇 能夠破紀錄? 目前直覺貪食蛇紀錄為 45 節 (除了蛇身節數外, 應該還要置入出現紅色標的物後的總完食時間). \n 手動執行貪食蛇 程式說明與整理. \n 自動執行貪食蛇 程式說明與整理. \n 自動執行貪食蛇 程式的改進. \n 參考資料: \n https://mde.tw/cp2021/content/Task3.html \n Brython snake 原始來源:  https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b \n https://github.com/mdecourse/snake-Q-Learning \n https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0 \n https://github.com/mdecourse/SnakeQlearning \n https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1 \n https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36 \n https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/ \n https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/ \n 2016_Exploration of Reinforcement Learning to SNAKE.pdf \n train_a_snake_with_reinforceme.pdf \n https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b \n https://github.com/mdecourse/Snake-Reinforcement-Learning \n Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf \n 延伸應用: \n \n \n \n \n https://github.com/mdecourse/snake-ai-pytorch \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'snake', 'text': '\n', 'tags': '', 'url': 'snake.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 30% \n Final Project 必須在 2022.01.05 22:00 之前完成 . \n Final Project 具體項目成果回報區 將於 2021.11.09 開啟, 於  2022.01.05 22:00 關閉 \n 利用 Brython 寫一個會 令人想玩 的網際遊戲. \n 參考章節: \n \n 專題摘要 \n 資料蒐集 \n 設計動機 \n 設計方法 \n 結果與討論 \n 附錄 \n \n 參考資料: \n https://github.com/collections/web-games \n https://github.com/topics/web-game \n https://github.com/topics/browser-game \n https://github.com/leereilly/games \n https://bmsleight.github.io/brython-blocks/ \n https://github.com/mdecourse/brython-blocks \n', 'tags': '', 'url': 'Final Project.html'}]};